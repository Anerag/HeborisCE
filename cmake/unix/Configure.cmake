if(${PACKAGE_TYPE} STREQUAL "WorkingDir")
	message(STATUS "Configuring working directory version; CMake installation is not supported")
	add_executable(${EXE} ${EXE_SOURCES})
	set(BASE_PATH "SDL_strdup(\"./\")")
	set(BASE_PATH_APPEND "\"\"")
	set(PREF_PATH "SDL_strdup(\"./\")")
	configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
# TODO: For macOS packaging, since CMake itself can't do everything: add_custom_command(TARGET ${EXE} POST_BUILD COMMAND ... DEPENDS ... VERBATIM)
elseif(${PACKAGE_TYPE} MATCHES "Portable")
	if(${CMAKE_SYSTEM_NAME} STREQUAL Darwin AND ${PACKAGE_TYPE} MATCHES "Mac App")
		message(STATUS "Configuring portable Mac app package")
		add_executable(${EXE} MACOSX_BUNDLE "${SRC}/pkg/macos/${EXE}.icns" ${EXE_SOURCES})
		set(BASE_PATH "SDL_GetBasePath()")
		set(BASE_PATH_APPEND "\"\"")
		set(PREF_PATH "SDL_GetBasePath()")
		configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
		set_source_files_properties("${SRC}/pkg/macos/${EXE}.icns" PROPERTIES MACOSX_PACKAGE_LOCATION Resources)
		set(MACOSX_BUNDLE_BUNDLE_NAME ${EXE})
		set(MACOSX_BUNDLE_GUI_IDENTIFIER ${BUNDLE_IDENTIFIER})
		set(MACOSX_BUNDLE_ICON_FILE ${EXE})
		set(SDL_FILESYSTEM_BASE_DIR_TYPE parent)
		set_target_properties(${EXE} PROPERTIES
			BUNDLE True
			MACOSX_BUNDLE_INFO_PLIST "${SRC}/pkg/macos/MacOSXBundleInfo.plist.in"
		)
	else()
		message(STATUS "Configuring portable package")
		add_executable(${EXE} ${EXE_SOURCES})
		set(BASE_PATH "SDL_GetBasePath()")
		set(BASE_PATH_APPEND "\"\"")
		set(PREF_PATH "SDL_GetBasePath()")
		configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
		install(TARGETS ${EXE} DESTINATION ".")
		install(DIRECTORY "${SRC}/config/mission" "${SRC}/config/stage" DESTINATION "config")
		install(DIRECTORY "${SRC}/res" DESTINATION ".")
		install(FILES "${SRC}/changelog.txt" "${SRC}/heboris.txt" "${SRC}/README.md" DESTINATION ".")
		if(MINGW)
			include(InstallRuntimeDependenciesMinGW.cmake REQUIRED)
		endif()
	endif()
elseif(${PACKAGE_TYPE} MATCHES "Installable")
	if(${CMAKE_SYSTEM_NAME} STREQUAL Darwin AND ${PACKAGE_TYPE} MATCHES "Mac App")
		message(STATUS "Configuring installable Mac app package")
		add_executable(${EXE} MACOSX_BUNDLE "${SRC}/pkg/macos/${EXE}.icns" ${EXE_SOURCES})
		set(BASE_PATH "SDL_GetBasePath()")
		set(BASE_PATH_APPEND "\"\"")
		set(PREF_PATH "SDL_GetPrefPath(\"nightmareci\", \"HeborisC7EX SDL2\")")
		configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
		set_source_files_properties("${SRC}/pkg/macos/${EXE}.icns" PROPERTIES MACOSX_PACKAGE_LOCATION Resources)
		set(MACOSX_BUNDLE_BUNDLE_NAME ${EXE})
		set(MACOSX_BUNDLE_GUI_IDENTIFIER ${BUNDLE_IDENTIFIER})
		set(MACOSX_BUNDLE_ICON_FILE ${EXE})
		set(SDL_FILESYSTEM_BASE_DIR_TYPE resource)
		set_target_properties(${EXE} PROPERTIES
			BUNDLE True
			MACOSX_BUNDLE_INFO_PLIST "${SRC}/pkg/macos/MacOSXBundleInfo.plist.in"
		)
	else()
		message(STATUS "Configuring installable package")
		add_executable(${EXE} ${EXE_SOURCES})
		set(BASE_PATH "SDL_GetBasePath()")
		set(PREF_PATH "SDL_GetPrefPath(\"nightmareci\", \"HeborisC7EX SDL2\")")
		if(UNIX)
			include(GNUInstallDirs REQUIRED)
			set(BASE_PATH_APPEND "\"../${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}\"")
			configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
			install(TARGETS ${EXE} DESTINATION "${CMAKE_INSTALL_BINDIR}")
			install(DIRECTORY "${SRC}/config/mission" "${SRC}/config/stage" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}/config")
			install(DIRECTORY "${SRC}/res" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}")
			install(FILES "${SRC}/README.md" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}")
			if(${CMAKE_SYSTEM_NAME} STREQUAL Linux)
				set(LINUX_DESKTOP_ICON "HeborisC7EX-SDL2" CACHE STRING "The file name of the icon to put into the Linux desktop file, without an extension.")
				configure_file("${SRC}/pkg/linux/HeborisC7EX-SDL2.desktop.in" "${BIN}/HeborisC7EX-SDL2.desktop" @ONLY)
				install(FILES "${BIN}/HeborisC7EX-SDL2.desktop" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/applications")
				install(FILES "${SRC}/pkg/linux/HeborisC7EX-SDL2.png" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/256x256/apps")
			endif()
		else()
			set(BASE_PATH_APPEND "\"\"")
			configure_file("${SRC}/src/main_sdl/paths.h.in" "${BIN}/src/main_sdl/paths.h" @ONLY)
		endif()
		if(MINGW)
			include(InstallRuntimeDependenciesMinGW.cmake REQUIRED)
		endif()
	endif()
else()
	message(FATAL_ERROR "Package type \"${PACKAGE_TYPE}\" unsupported")
endif()

set_target_properties(${EXE}
	PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ${BIN}
)

include(${SRC}/cmake/unix/AddLibrariesPkgConfig.cmake REQUIRED)
AddLibrariesPkgConfig(${EXE})
